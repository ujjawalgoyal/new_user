//= ========================= Load Modules Start =======================

const Promise = require("bluebird");

//= ========================= Load internal modules ====================

const uploadToS3Service = require("./uploadToS3");
const appConstant = require("./constants");
const userService = require("../user/userService");

//= ========================= Load Modules End ==============================================

//= ========================= Export Module Start ==============================

// Add / update user image
function addUpdateUserProfileImage(imageParams) {
  const uploadImgPrms = uploadToS3Service.uploadFile(imageParams.file);
  return Promise.join(uploadImgPrms)
    .bind({})
    .then((result) => {
      const updateParams = {};
      updateParams._id = imageParams._id;
      updateParams.profile_pic = result[0].Location;
      return userService.addUpdateProfileImage(updateParams);
    })
    .then(resp => ({
      message: appConstant.SUCCESS_MESSAGES.mediaUploaded,
      url: resp.profile_pic,
    }))
    .catch((err) => {
      throw err;
    });
}

// Add / update bucket image
function addUpdateBucketImage(imageParams) {
  const uploadImgPrms = uploadToS3Service.uploadFile(imageParams.file);
  return Promise.join(uploadImgPrms)
    .bind({})
    .then((result) => {
      const updateParams = {};
      updateParams._id = imageParams.id;
      updateParams.image = result[0].Location;
      return userService.addUpdateBucketImage(updateParams);
    })
    .then(resp => ({
      message: appConstant.SUCCESS_MESSAGES.mediaUploaded,
      url: resp.image,
    }))
    .catch((err) => {
      throw err;
    });
}

const uploadCsv = async (params) => {
  try {
    return await uploadToS3Service.uploadFile(params);
  } catch (err) {
    throw err;
  }
};

// Add / update bucket icon
function addUpdateBucketIcon(imageParams) {
  const uploadImgPrms = uploadToS3Service.uploadFile(imageParams.file);
  return Promise.join(uploadImgPrms)
    .bind({})
    .then((result) => {
      const updateParams = {};
      updateParams._id = imageParams.id;
      updateParams.icon = result[0].Location;
      return userService.addUpdateBucketIcon(updateParams);
    })
    .then(resp => ({
      message: appConstant.SUCCESS_MESSAGES.mediaUploaded,
      url: resp.icon,
    }))
    .catch((err) => {
      throw err;
    });
}
//= ========================= Export Module Start =====================

module.exports = {
  addUpdateUserProfileImage,
  addUpdateBucketImage,
  uploadCsv,
  addUpdateBucketIcon,
};

//= ========================= Export Module End ===============================
