
//= ========================= Load Modules Start =======================
//= ========================= Load external modules ====================

const Promise = require("bluebird");
const fs = require("fs");
const gm = require("gm");
const path = require("path");
const ffmpeg = require("fluent-ffmpeg");

//= ========================= Load internal modules ====================


//= ========================= Load Modules End ==============================================

function renameFile(file, width, height) {
  const localFile = {};
  localFile.fieldname = file.fieldname;
  localFile.originalname = file.originalname;
  localFile.encoding = file.encoding;
  localFile.mimetype = "image/png";
  localFile.path = file.path;
  localFile.size = file.size;
  let dest = path.join(file.path, "../");
  localFile.destination = dest;
  const resizeName = `${height}x${width}${file.filename}`;
  localFile.filename = resizeName;
  dest += resizeName;
  localFile.path = dest;
  return localFile;
}

function createImageThumb(file, width, height) {
  const thumdImage = renameFile(file, width, height);
  return new Promise(((resolve, reject) => {
    gm(file.path).resize(width, height).autoOrient().write(thumdImage.path, (err) => {
      if (err) {
        reject(err);
      }
      resolve(thumdImage);
    });
  }));
}

function createVideoThumb(file, width, height) {
  const thumdImage = renameFile(file, width, height);
  return new Promise(((resolve, reject) => {
    new ffmpeg({ source: file.path })
    //          .withSize(width+'*'+height)
      .takeScreenshots(1, thumdImage.path)
      .on("end", (err, filenames) => {
        console.log(thumdImage);
        thumdImage.path = `${thumdImage.path}/tn.png`;
        resolve(thumdImage);
      });
  }));
}


function getFileDimen(file) {
  return new Promise(((resolve, reject) => {
    gm(file.path).size((err, size) => {
      if (err) {
        reject(err);
      }
      resolve({ height: size.height, width: size.width });
    });
  }));
}


//= ========================= Export Module Start ==============================

module.exports = {
  createImageThumb,
  createVideoThumb,
  getFileDimen,
};

//= ========================= Export Module End ===============================
