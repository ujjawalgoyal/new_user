//= ========================= Load Modules Start =======================

//= ========================= Load external modules ====================


//= ========================= Load internal modules ====================

const sendMail = require("./index");
const config = require("../config").env;
const sendgrid = require("sendgrid")(config.sendGrid.apiKey);
const appUtils = require("../appUtils");
const constants = require('../constants');

//= ========================= Load Modules End ==============================================

function getResetPasswordLink(params) {
  return config.RESET_PASSWORD.LINK + params.token;
}

function getMailBody(params, link) {
  const email = new sendgrid.Email({
    from: config.sendGrid.FROM,
    to: params.email,
    html: "<p></p>",
    subject: "RESET-PASSWORD",
  });
  email.setFilters({
    templates: {
      settings: {
        enabled: 1,
        template_id: config.templateIds.RESET_PASSWORD,
      },
    },
  });
  email.addSubstitution("-email-", params.email);
  email.addSubstitution("-link-", link);
  return email;
}

function sendResetPasswordMail(params) {
  const link = getResetPasswordLink(params);
  const body = getMailBody(params, link);
  return sendMail.sendMail(body)
    .then((resp) => {
      console.log(resp);
    })
    .catch((err) => {
      console.log(err);
    });
}

function getSetPasswordMailBodyChild(params, link, parentName) {
  const email = new sendgrid.Email({
    from: config.sendGrid.FROM,
    to: params.email,
    html: "<p></p>",
    subject: "SET-PASSWORD",
  });
  email.setFilters({
    templates: {
      settings: {
        enabled: 1,
        template_id: config.templateIds.SET_PASSWORD_CHILD,
      },
    },
  });
  email.addSubstitution("-PARENT-", parentName);
  email.addSubstitution("-email-", params.email);
  email.addSubstitution("-link-", link);
  return email;
}

function sendSetPasswordMailToChild(params, link, parentName) {
  console.log("set password link", link);
  const resetPswdLink = getResetPasswordLink(params);
  const body = getSetPasswordMailBodyChild(params, link, parentName);
  return sendMail.sendMail(body)
    .then((resp) => {
      console.log(resp);
    })
    .catch((err) => {
      console.log(err);
    });
}


function getSetPasswordMailBodyParent(params, link, childName) {
  const email = new sendgrid.Email({
    from: config.sendGrid.FROM,
    to: params.email,
    html: "<p></p>",
    subject: "SET-PASSWORD",
  });
  email.setFilters({
    templates: {
      settings: {
        enabled: 1,
        template_id: config.templateIds.SET_PASSWORD_PARENT,
      },
    },
  });
  email.addSubstitution("-STUDENT-", childName);
  email.addSubstitution("-email-", params.email);
  email.addSubstitution("-link-", link);
  return email;
}

function sendSetPasswordMailToParent(params, link, childName) {
  console.log("set password link", link);
  const resetPswdLink = getResetPasswordLink(params);
  const body = getSetPasswordMailBodyParent(params, link, childName);
  return sendMail.sendMail(body)
    .then((resp) => {
      console.log(resp);
    })
    .catch((err) => {
      console.log(err);
    });
}

const getName = (params) => {
  let name = "";
  if (params.first_name) {
    name = appUtils.startCharacterInUpperCase(params.first_name);
  }
  return name;
};

// Method to get signup welcome mail body
const getSignUpWelcomeMailBody = (params) => {
  const email = new sendgrid.Email({
    from: config.sendGrid.FROM,
    to: params.email,
    html: "<p></p>",
    subject: "SIGNUP-WELCOME",
  });
  email.setFilters({
    templates: {
      settings: {
        enabled: 1,
        template_id: config.templateIds.SIGN_UP_WELCOME,
      },
    },
  });
  email.addSubstitution("-name-", getName(params));
  email.addSubstitution("-email-", params.email);
  return email;
};

// Method to send signup welcome mail
const sendSignUpWelcomeMail = (params) => {
  const body = getSignUpWelcomeMailBody(params);
  return sendMail.sendMail(body)
    .then((resp) => {
      console.log(resp);
    })
    .catch((err) => {
      console.log(err);
    });
};

const sendMailCsvInMail = (data) => {
  const payload = new sendgrid.Email({
    from: config.sendGrid.FROM,
    to: "naval.kishor@mobicules.com",
    html: "<p></p>",
    subject: "CSV duplicate program",
  });
  payload.addFile({
    filename: "duplicate_program.csv",
    content: data,
  });
  return sendMail.sendMail(payload)
    .then((resp) => {
      console.log(resp);
    })
    .catch((err) => {
      console.log(err);
    });
};

function getOTPMailBody(params, link) {
  const body = constants.otpMailBody;
  const newBody = body.replace("[OTP]", params.otp.toString());
  // const firstName = params.first_name ? params.first_name : "";
  // const name = appUtils.startCharacterInUpperCase(firstName);
  // var data;
  // if(name.length > 0) {
  // data = "Hi " + name;
  // }
  // else {
  data = "Hi";
  // }
  const email = new sendgrid.Email({
    from: config.sendGrid.FROM,
    to: params.email,
    html: "<p>" + data + ",</p>" + newBody + "<br><br>" + "<p>Foster Team.</p>",
    subject: "Foster would like to verify you",
  });

  return email;
}

const sendOtpMail = (params) => {
  const body = getOTPMailBody(params);
  return sendMail.sendMail(body)
    .then((resp) => {
      console.log(resp);
    })
    .catch((err) => {
      console.log(err);
    });
};


// Method to get signup welcome mail body
const getincompleteProfileMailBody = (params) => {
  const email = new sendgrid.Email({
    from: config.sendGrid.FROM,
    to: params.email,
    html: "<p></p>",
    subject: "",
  });
  email.setFilters({
    templates: {
      settings: {
        enabled: 1,
        template_id: config.templateIds.SIGN_UP_WELCOME,
      },
    },
  });
  email.addSubstitution("-name-", getName(params));
  email.addSubstitution("-email-", params.email);
  return email;
};


// Method to send first checkin mail
const sendincompleteProfileMail = (params) => {
  const body = getincompleteProfileMailBody(params);
  return sendMail.sendMail(body)
    .then((resp) => {
      console.log(resp);
    })
    .catch((err) => {
      console.log(err);
    });
};





//= ========================= Export Module Start ===========================

module.exports = {
  sendResetPasswordMail,
  sendSignUpWelcomeMail,
  sendMailCsvInMail,
  sendOtpMail,
  sendSetPasswordMailToChild,
  sendSetPasswordMailToParent,
  sendincompleteProfileMail
};

//= ========================= Export module end ==================================
