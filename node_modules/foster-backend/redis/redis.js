

//= ========================= Load Modules Start ==========================

//= ========================= Load External Modules ==========================

const dbConfig = require("../lib/config/dbConfig");

const redisClient = dbConfig.client;
const Promise = require("bluebird");

const redis = Promise.promisifyAll(redisClient);

//= ========================= Load Internal Modules ==========================
//= ========================= Load Modules End ==========================


const setValue = function (key, value) {
  return redisClient.setAsync(key, value)
    .then(result => result)
    .catch((err) => {
      throw err;
    });
};


const getValue = function (key) {
  return redisClient.getAsync(key)
    .then(result => result)
    .catch((err) => {
      throw err;
    });
};


// value in JSON (key value pair) form
const hmSet = function (key, value) {
  redisClient.hmsetAsync(key, value)
    .then(result => result)
    .catch((err) => {
      throw err;
    });
};

const hGetAll = function (key) {
  redisClient.hgetall(key, (err, object) => {
    if (err) {
      console.log(err);
    } else {
      console.log(object);
    }
  });
};


// to create a list and add items in list at right
const rPush = function () {

};

const checkExistence = function (key, cb) {
  redisClient.exists(key, (err, reply) => {
    if (err) {
      cb(err, null);
    } else if (reply === 1) {
      console.log("exist");
      cb(null, "exist");
    } else {
      cb(null, "notExist");
    }
  });
};


const deleteKey = function (key) {
  return redisClient.delAsync(key)
    .then(result => result)
    .catch((err) => {
      throw err;
    });
};

const setJWTToken = function (params) {
  const key = params.userToken;
  const value = { jwtToken: params.jwtToken, uid: params.uid };
  const cacheToken = JSON.stringify(value);
  const saveTKnPrms = setValue(key, cacheToken);
  const userTokenKey = params.uid;
  const userToken = params.jwtToken;
  const saveUsrTknPrms = setValue(userTokenKey, userToken);
  return Promise.join(saveTKnPrms, saveUsrTknPrms)
    .then((result) => {
      console.log(result);
      return result;
    })
    .catch((err) => {
      console.log(err);
      throw err;
    });
};

module.exports = {
  setJWTToken,
  setValue,
  getValue,
  deleteKey,
  hmSet,
};
